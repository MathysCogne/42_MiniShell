# Makefile generated by Make My File: https://github.com/MathysCogne/Make_My_File-42
# Date of generation: 13-12-2024 13:01:13

NAME = minishell

SRCDIR = src
OBJDIR = obj
INCDIR = include

SRC = minishell.c \
			exec/exec.c \
			parsing/get_input.c \
			parsing/struct/ft_clean_input.c \
			parsing/struct/struct_utils.c \
			parsing/struct/input_add_back.c \
			parsing/debug.c \
			utils/ft_split_sep.c


OBJ = $(SRC:.c=.o)
SRC := $(addprefix $(SRCDIR)/, $(SRC))
OBJ := $(patsubst $(SRCDIR)/%, $(OBJDIR)/%, $(OBJ))

BUILD = $(OBJDIR)/.build

LIBFT_DIR := libft
LIBFT := $(LIBFT_DIR)/libft.a
LIBFT_INCLUDE := $(LIBFT_DIR)/include
LDFLAGS =  -L$(LIBFT_DIR) -lreadline
LIBS =  $(LIBFT)


CC = cc
CFLAGS = -Wall -Wextra -Werror -I$(INCDIR) -g3 -I$(LIBFT_INCLUDE)
AR = ar
ARFLAGS = rcs

#################################
#          COMPIL MODE          #
#################################
VERBOSE ?= 0
ifeq ($(VERBOSE),1)
  V := 
else
  V := @
endif

#################################
#             COLORS            #
#################################
RED     := "\033[1;31m"
GREEN   := "\033[1;32m"
RESET   := "\033[0m"


#################################
#            EXECUTABLE         #
#################################

all: $(NAME)

$(NAME): $(BUILD)

$(BUILD): $(OBJ) $(LIBFT)
	$(V)$(CC) $(CFLAGS) $(LDFLAGS) $(OBJ) $(BONUS_OBJ) $(LIBS) $(MLXFLAGS) -o $(NAME)
	$(V)echo $(GREEN)"[$(NAME)] Executable created ✅"$(RESET)
	@touch $@


#################################
#        OBJ & DEP FILES        #
#################################
$(OBJDIR):
	$(V)mkdir -p $(OBJDIR) || true

DEP = $(OBJ:.o=.d)

$(OBJDIR)/%.o: $(SRCDIR)/%.c | $(OBJDIR)
	@mkdir -p $(dir $@)
	$(V)$(CC) $(CFLAGS) -MMD -MP -c $< -o $@

-include $(DEP)


#################################
#             LIBFT             #
#################################
# Libft - Branch 'V.mini_talk_07_12_2024' ### TODO BRANCH MINISHELL BEFORE PUSH
$(LIBFT):
	@$(V)echo '[$(NAME)] Downloading my Libft from github.com...'$(RESET)
	$(V)@git clone https://github.com/MathysCogne/MyLibft_GNL_Printf.git libft > /dev/null 2>&1
	@$(V)echo '[$(NAME)] Compiling Libft...'$(RESET)
	$(V)$(MAKE) --silent -C $(LIBFT_DIR)
	@$(V)echo '[$(NAME)] Libft build successfully'

#################################
#             CLEAN             #
#################################
clean:
	$(V)echo $(RED)'[$(NAME)] Cleaning objects'd$(RESET)
	$(V)rm -rf $(OBJDIR)

fclean: clean
	$(V)echo $(RED)'[$(NAME)] Cleaning all files'$(RESET)
	$(V)rm -f $(NAME)
	$(V)echo $(RED)'[libft] Remove directory'$(RESET)
	@rm -rf $(LIBFT_DIR)

#################################
#             NORME             #
#################################
norme:
	@if norminette | grep -B1 "Error"; then \
		echo $(RED)"Norme KO"$(RESET); \
	else \
		echo $(GREEN)"Norme ok ✅"$(RESET); \
	fi

re: fclean all

regen:
	makemyfile

.PHONY: all clean fclean re bonus regen norme
.DEFAULT_GOAL := all
